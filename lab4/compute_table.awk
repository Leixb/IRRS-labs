#!/usr/bin/env -S awk -f

# Usage: ./compute_table.awk [kmeans.log ...]
# We pass the list of output files generated by kmeans.sh to this script.
#
# IMPORTANT: The folder of each kmeans.log
# must have the format: "<min_freq>_<max_freq>_<n_words>/".
#
# The easiest way is to use find:
# find -name kmeans.log | xargs ./compute_table.awk
#
# Or if you have globstar enabled (or use zsh / fish):
# ./compute_table.awk **/kmeans.log

BEGIN {
    OFS=",";
    print "min_freq,max_freq,n_words,actual_words,clusters_init,iteration,it_converged,it_clusters,it_time";
}

BEGINFILE {
    converged = 0;

    dir = FILENAME;
    gsub(/\/[^\/]*$/, "", dir);

    info = dir;
    gsub(/.*\//, "", info);

    n_info = split(info, sinfo, "_");

    # In some folders, the number of words goes first (by mistake),
    # so we need to check if the first element is > 1
    if (sinfo[1] > 1) {
        n_words = sinfo[1];
        min_freq = sinfo[2];
        max_freq = sinfo[3];
    } else {
        min_freq = sinfo[1];
        max_freq = sinfo[2];
        n_words = sinfo[3];
    }

    words = 0;
    while ((getline <(dir "/vocabulary.txt")) > 0) {
        words++;
    }
}

$1 == "Iteration" {
    iter = $2;

    clusters[iter] = 0;
    while ((getline < (dir "/prototypes" iter ".txt")) > 0) {
        clusters[iter]++;
    }
}

$1 == "Time=" {
    time[iter] = $2;

}

$2 == "converged" {
    converged = 1;
}

ENDFILE {

    clusters_init = 0;
    while ((getline < (dir "/prototype.txt")) > 0) {
        clusters_init++;
    }

    for (i = 1; i <= iter; i++) {
        if (i == iter && converged) {
            conv = 1;
        } else {
            conv = 0;
        }
        print min_freq,max_freq,n_words,words,clusters_init,i,conv,clusters[i],time[i];
    }
}
